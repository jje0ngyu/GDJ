<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- mapper의 namespace를 Mapper Interface로 지정해 준다. -->
<mapper namespace="com.gdu.app11.mapper.EmpMapper">

	<!-- employees와 departments의 조인을 위한 resultMap -->
	<resultMap type="DeptDTO" id="DeptMap">
		<result column="DEPARTMENT_ID" property="departmentId"/>
		<result column="DEPARTMENT_NAME" property="departmentName"/>
		<result column="MANAGER_ID" property="managerId"/>
		<result column="LOCATION_ID" property="locationId"/>
	</resultMap>
	<resultMap type="EmpDTO" id="EmpMap">
		<result column="EMPLOYEE_ID" property="employeeId" /> 
		<result column="FIRST_NAME" property="firstName" /> 
		<result column="LAST_NAME" property="lastName" /> 
		<result column="EMAIL" property="email" /> 
		<result column="PHONE_NUMBER" property="phoneNumber" /> 
		<result column="HIRE_DATE" property="hireDate" /> 
		<result column="JOB_ID" property="jobId" /> 
		<result column="SALARY" property="salary" /> 
		<result column="COMMISSION_PCT" property="commissionPct" /> 
		<result column="MANAGER_ID" property="managerId" /> 
		<collection resultMap="DeptMap" property="deptDTO"></collection>	
	</resultMap>
	
	<select id="selectAllEmployeesCount" resultType="int">
		SELECT COUNT(*)
		  FROM EMPLOYEES
	</select>
	
	<!-- 파라미터 타입이 2개일 경우 생략하기도 한다. -->
	<!-- 입사순으로 정렬한 뒤(A) → ROWNUM 붙이고 → 11 ~20 가져오기 -->
	<select id="selectemployeesByPage" resultMap="EmpMap">
		SELECT B.*
		  FROM (SELECT ROWNUM AS RN, A.*
				  FROM (SELECT E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
						  FROM DEPARTMENTS D INNER JOIN EMPLOYEES E
						    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
						 ORDER BY HIRE_DATE DESC) A) B
		 WHERE B.RN BETWEEN #{param1} AND #{param2}
	</select>

</mapper>

